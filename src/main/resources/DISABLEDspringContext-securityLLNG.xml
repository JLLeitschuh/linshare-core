<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">


	<bean id="springSecurityFilterChainProxy" class="org.springframework.security.web.FilterChainProxy">

		<!-- allow spring security filter to apply rules on URL parameters -->
		<property name="stripQueryStringFromUrls" value="false" />

		<sec:filter-chain-map path-type="ant">
			<sec:filter-chain pattern="/?login_error=*" filters="httpSessionIntegrationFilter,rememberMeProcessingFilter" />
			<sec:filter-chain pattern="/" filters="httpSessionIntegrationFilter,lemonLDAPFilter,rememberMeProcessingFilter" />
			<sec:filter-chain pattern="/assets/**" filters="none" />
			<sec:filter-chain pattern="/applet/**" filters="none" />
			<sec:filter-chain pattern="/css/**" filters="none" />
			<sec:filter-chain pattern="/images/**" filters="none" />
			<sec:filter-chain pattern="/videos/**" filters="none" />

			<sec:filter-chain pattern="/**/help/**" filters="none" />
			<sec:filter-chain pattern="/**/password/**" filters="none" />
			<sec:filter-chain pattern="/**/*.js" filters="none" />
			<sec:filter-chain pattern="/**/*.css" filters="none" />
			<sec:filter-chain pattern="/**/*.swf" filters="none" />


			<sec:filter-chain pattern="/**/en" filters="httpSessionIntegrationFilter,rememberMeProcessingFilter" />
			<sec:filter-chain pattern="/**/fr" filters="httpSessionIntegrationFilter,rememberMeProcessingFilter" />
			<sec:filter-chain pattern="/**/nl" filters="httpSessionIntegrationFilter,rememberMeProcessingFilter" />

			<sec:filter-chain pattern="/download/**" filters="none" />
			<sec:filter-chain pattern="/**/download.passwordpopup.formpassword" filters="none" />
			<sec:filter-chain pattern="/download.downloadthemall/**" filters="none" />
			<sec:filter-chain pattern="/localDecrypt/**" filters="none" />

			<!-- allow soap wsdl to be public with these rule -->
			<sec:filter-chain pattern="/webservice/soap?wsdl" filters="none" />
			<sec:filter-chain pattern="/webservice/soap?wsdl=SoapService.wsdl" filters="none" />
			
			<sec:filter-chain pattern="/webservice/upload?wsdl" filters="none" />
			<sec:filter-chain pattern="/webservice/upload?wsdl=MTOMUploadSoapService.wsdl" filters="none" />
			
			<sec:filter-chain pattern="/webservice/?_wadl" filters="none" />
			<sec:filter-chain pattern="/webservice/rest/plugin/information" filters="none" />
			<sec:filter-chain pattern="/webservice/services/**" filters="none" />
			
			<sec:filter-chain pattern="/webservice/**"
				filters="httpSessionIntegrationFilter, lemonLDAPFilter, basicProcessingFilter,basicExceptionTranslationFilter ,filterSecurityInterceptor" />
				
			<sec:filter-chain pattern="/index.form" filters="httpSessionIntegrationFilter" />
			<sec:filter-chain pattern="/j_security_check" filters="httpSessionIntegrationFilter,authenticationProcessingFilter" />
			<sec:filter-chain pattern="/**"
				filters="httpSessionIntegrationFilter,lemonLDAPFilter,exceptionTranslationFilter,logoutFilter,rememberMeProcessingFilter,filterSecurityInterceptor" />
		</sec:filter-chain-map>

	</bean>


	<!-- REMEMBER-ME SERVICE DEFINITION -->
	<bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<property name="key" value="springRocks" />
	</bean>

	<bean id="rememberMeService" class="org.linagora.linshare.view.tapestry.services.impl.LinshareRememberMeServices">
		<property name="key" value="springRocks" />
		<property name="userDetailsService" ref="guestAuthProvider" />
		<property name="tokenRepository" ref="cookieRepository" />
		<property name="alwaysRemember" value="false" />
		<constructor-arg ref="cookieRepository" />
	</bean>

	<bean id="rememberMeProcessingFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<property name="rememberMeServices" ref="rememberMeService" />
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>

	<!-- FILTERS DEFINITION -->
	<bean id="httpSessionIntegrationFilter" class="org.springframework.security.web.context.HttpSessionContextIntegrationFilter" />


	<bean id="authenticationProcessingFilter" class="org.linagora.linshare.auth.DomainAuthenticationProcessingFilter">

		<property name="authenticationFailureHandler" ref="failureHandler" />
		<property name="authenticationSuccessHandler" ref="successHandler" />
		<property name="filterProcessesUrl" value="/j_security_check" />
		<property name="usernameParameter" value="login" />
		<property name="passwordParameter" value="password" />
		<property name="allowSessionCreation" value="true" />
		<property name="sessionAuthenticationStrategy" ref="sas" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="rememberMeServices" ref="rememberMeService" />

	</bean>

	<bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/startingPage" /> <!-- which is the default value -->
	</bean>

	<bean id="failureHandler" class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/?login_error=1" />
		<property name="exceptionMappings">
			<props>
				<prop key="org.linagora.linshare.auth.exceptions.BadDomainException">/?login_error=2</prop>
			</props>
		</property>
	</bean>
	<bean id="sas" class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
		<property name="migrateSessionAttributes" value="true" />
	</bean>

	<bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint" ref="authenticationEntryPoint" />
	</bean>

	<bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.AuthenticationProcessingFilterEntryPoint">
		<property name="loginFormUrl" value="/" />
	</bean>

	<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg value="/LogoutSso" />
		<constructor-arg>
			<list>
				<ref bean="rememberMeService" />
				<bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</list>
		</constructor-arg>
	</bean>



	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />

		<property name="securityMetadataSource">
			<sec:filter-security-metadata-source>
				<sec:intercept-url pattern="/**/administration/userconfig*" access="ROLE_AUTH" />
				<sec:intercept-url pattern="/**/administration/domains" access="ROLE_SUPERADMIN" />
				<sec:intercept-url pattern="/**/administration/domains/**" access="ROLE_SUPERADMIN" />
				<sec:intercept-url pattern="/**/administration/" access="ROLE_ADMIN" />
				<sec:intercept-url pattern="/**/testpopup/" access="ROLE_ADMIN" />
				<sec:intercept-url pattern="/**" access="ROLE_AUTH" />
			</sec:filter-security-metadata-source>
		</property>
	</bean>



	<!-- REST part / Magic lies there -->
	<bean id="basicProcessingFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
		<property name="authenticationManager">
			<ref bean="authenticationManager" />
		</property>
		<property name="authenticationEntryPoint">
			<ref bean="restAuthenticationEntryPoint" />
		</property>
	</bean>

	<bean id="restAuthenticationEntryPoint" class="org.linagora.linshare.auth.LinShareBasicAuthenticationEntryPoint">
		<property name="realmName">
			<value>Name Of Your LinShare Realm</value>
		</property>
	</bean>

	<bean id="basicExceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint" ref="restAuthenticationEntryPoint" />
	</bean>

	<!-- AUTHENTICATION MANAGEMENT -->
	<!-- Authentication manager -->
	<bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
			<list>
				<ref bean="ssoAuthenticationProvider" />
				<ref bean="rememberMeAuthenticationProvider" />
				<ref bean="daoAuthenticationProvider" />
				<ref bean="domainAuthenticationProvider" />
			</list>
		</property>
	</bean>

	<!-- DAO Authentification -->
	<bean id="guestAuthProvider" class="org.linagora.linshare.auth.DaoAuthProvider">
		<constructor-arg ref="accountService" />
	</bean>

	<bean id="passwordEncoderFactory" class="org.linagora.linshare.auth.PasswordEncoderFactory">
		<constructor-arg value="SHA" />
	</bean>

	<bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="guestAuthProvider" />
		<property name="passwordEncoder">
			<bean factory-bean="passwordEncoderFactory" factory-method="getInstance" />
		</property>
	</bean>


	<!-- Domain Authentification -->

	<bean id="domainAuthenticationProvider" class="org.linagora.linshare.auth.DomainAuthProviderDao">
		<property name="userService" ref="userService" />
		<property name="abstractDomainService" ref="abstractDomainService" />
		<property name="logEntryService" ref="logEntryService" />
	</bean>


	<!-- SSO PreAuthentification -->
	<bean id="ssoAuthenticationProvider" class="org.linagora.linshare.auth.SSOAuthenticationProvider">
		<property name="userDetailsProvider" ref="userDetailsProvider" />
	</bean>
	<bean id="userDetailsProvider" class="org.linagora.linshare.auth.UserDetailsProvider">
		<property name="userService" ref="userService" />
	</bean>

	<!-- AUTHORIZATIONS MANAGEMENT -->
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<property name="decisionVoters">
			<list>
				<ref bean="roleVoter" />
			</list>
		</property>
	</bean>

	<bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter" />

	<bean id="lemonLDAPFilter" class="org.linagora.linshare.auth.PreAuthenticationHeader">
		<constructor-arg value="${sso.header.allowfrom}" />
		<property name="principalRequestHeader" value="${sso.header.user}" />
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>
</beans>
