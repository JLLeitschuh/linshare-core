<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs" xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cxf="http://cxf.apache.org/core"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd">

	<!-- cxf -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

	<!-- REST -->
	<bean id="fineUploaderRestService" class="org.linagora.linshare.webservice.user.impl.FineUploaderRestServiceImpl" destroy-method="destroy">
		<constructor-arg ref="wsDocumentFacade" />
		<constructor-arg ref="wsDocumentAsyncFacade" />
		<constructor-arg ref="wsThreadEntryFacade" />
		<constructor-arg ref="wsThreadEntryAsyncFacade" />
		<constructor-arg ref="taskExecutor" />
		<constructor-arg ref="wsAsyncTaskFacade" />
		<constructor-arg value="${linshare.tapestry.fineuploader.async.mode.enable}" />
		<constructor-arg value="${linshare.tapestry.fineuploader.async.mode.default.threshold}" />
		<constructor-arg value="${linshare.tapestry.fineuploader.async.mode.default.frequency}" />
		<constructor-arg value="${linshare.tapestry.fineuploader.async.mode.max.threshold}" />
		<constructor-arg value="${linshare.tapestry.fineuploader.async.mode.max.frequency}" />
	</bean>

	<jaxrs:server id="fineuploaderContainer" address="/fineuploader">
		<jaxrs:serviceBeans>
			<ref bean="fineUploaderRestService" />
		</jaxrs:serviceBeans>
		<jaxrs:extensionMappings>
			<entry key="json" value="text/plain" />
			<entry key="xml" value="application/xml" />
		</jaxrs:extensionMappings>
		<jaxrs:providers>
			<!--  ExceptionMappers. -->
			<ref bean="businessExceptionMapper" />
			<ref bean="genericExceptionMapper" />
			<ref bean="webApplicationExceptionMapper" />
			<!-- Json provider for serialisation -->
			<ref bean="textPlainJsonProvider" />
		</jaxrs:providers>
		<jaxrs:features>
<!-- 			<cxf:logging /> -->
		</jaxrs:features>
		<jaxrs:inInterceptors>
			<!-- For debug only : print input message -->
<!-- 			<ref bean="logInbound" /> -->
			<!-- This interceptor is designed to store some context properties in message exchange context for timingOutInterceptor -->
			<ref bean="timingInInterceptor" />
		</jaxrs:inInterceptors>
		<jaxrs:outInterceptors>
			<!-- For debug only : print output  message -->
<!--             	<ref bean="logOutbound" /> -->
			<!-- This interceptor is designed compute request execution time.-->
			<ref bean="timingOutInterceptor" />
		</jaxrs:outInterceptors>
		<jaxrs:inFaultInterceptors>
		</jaxrs:inFaultInterceptors>
		<jaxrs:outFaultInterceptors>
		</jaxrs:outFaultInterceptors>
	</jaxrs:server>
</beans>
